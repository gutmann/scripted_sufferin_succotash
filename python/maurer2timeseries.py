#!/usr/bin/env python
import glob
import datetime

import numpy as np

import swim_io

maurer_dir="/home/gutmann/data/usbr/stat_data/DAILY/obs/maurer.125"

def write_output_file(filename,lat,lon,times,data):
    with open(filename,"wu") as f:
        f.write("""# DATA GENERATED BY = Gutmann,Ethan NCAR/RAL (gutmann@ucar.edu)
# DATA COVERAGE    = START: """+str(times[0])+"""; STOP: """+str(times[-1])+"""
# PLATFORM         = Maurer et al 2002 dataset
# INSTRUMENT       = Gridded Precipitation product
# DATA GENERATED   = 2013-01-14
# SOURCE SCRIPT    = ~gutmann/bin/python/maurer2timeseries.py
# SOURCE FILE      = /d1/gutmann/usbr/stat_down/DAILY/obs/maurer/pr/*.nc
#
# STN ID           = """+filename[:12]+"""
# STN NAME         = Maurer data point
# STNLAT/STNLONG   = """+str(lat)+" / "+str(lon)+"""
# STNELV (FT)      = -9999
#
# DATE/TIME        = YYYYMMDD HHMMSS in UTC
# PRCP             = Total precipitation in the past 24-hours (mm)
# SWE              = not present
# Missing data     = -999
#
# 
#     DATE HHMMSS       PRCP        \n""")
        for i in range(len(times)):
            t=times[i]
            f.write("{0:04}".format(t.year)+"{0:02}".format(t.month)+
                    "{0:02}".format(t.day)+" "+"{0:02}".format(t.hour)+"0000"+
                    "    "+str(data[i])+"\n")
        

def main():
    maurer_files=glob.glob(maurer_dir+"/pr/nldas*20*.nc")
    maurer_files.sort()
    lat=swim_io.read_nc(maurer_files[0],"latitude").data
    ymin=np.where(lat>34)[0][0]
    ymax=np.where(lat>44)[0][0]
    lon=swim_io.read_nc(maurer_files[0],"longitude").data
    xmin=np.where(lon>-114)[0][0]
    xmax=np.where(lon>-100)[0][0]
    
    # print(xmin,xmax,ymin,ymax)
    
    data=swim_io.read_files(maurer_files,"pr",axis=0)
    # print(data.shape)
    base_date=datetime.datetime(int(maurer_files[0].split(".")[-2]),1,1)
    dt=datetime.timedelta(1)
    timeoffset=datetime.timedelta(1+8/24.0)
    dates=[base_date+dt*i+timeoffset for i in range(data.shape[0])]
    
    print("NSITES "+str(int((xmax-xmin) * (ymax-ymin)))+"""
    #STNID    LAT         LONG   ELV_FT   STN_NAME""")
    
    for i in range(xmin,xmax):
        for j in range(ymin,ymax):
            stnid="{0:07}".format(i-xmin+(j-ymin)*(xmax-xmin))+"maurer"
            print(", ".join([stnid,str(lat[j]),str(lon[i]),"0000","Grid_point"]))
            write_output_file(stnid+"_PRCP.txt",lat[j],lon[i],dates,data[:,j,i])
    
    
    
    

if __name__ == '__main__':
    main()